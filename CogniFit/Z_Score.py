# -*- coding: utf-8 -*-
"""Z_Score.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16dH0-ONHyDKQnTWpKtETi2Cgc6FzLYR-
"""

import pandas as pd

# Read the original Excel file
df = pd.read_excel('/content/Z-Score.xlsx')

def normalize(value, min_val, max_val, invert=False):
    normalized_value = (value - min_val) / (max_val - min_val) * 100
    if invert:
        normalized_value = 100 - normalized_value
    return normalized_value

# Normalize specified columns
columns_to_normalize = {
    'Accuracy': (0, 100, False),
    'Accuracy in high demand': (0, 100, False),
    'Accuracy in low demand': (0, 100, False),
    'Commission errors': (0, 8, True),
    'Omission errors': (0, 24, True),
    'Omission errors (percentage)': (0, 100, True),
    'Omission errors in high demand': (0, 8, True),
    'Omission errors in low demand': (0, 16, True),
    'Response time': (0, 5000, True),
    'Response time in high demand': (0, 5000, True),
    'Response time in low demand': (0, 5000, True)
}

for column, (min_val, max_val, invert) in columns_to_normalize.items():
    df[column] = df[column].apply(lambda x: normalize(x, min_val, max_val, invert))

# Convert all numeric columns to float data type
numeric_columns = list(columns_to_normalize.keys())
df[numeric_columns] = df[numeric_columns].apply(pd.to_numeric, errors='coerce')

# Calculate the average of values in each row
df['Average'] = df[numeric_columns].mean(axis=1)

# Save the normalized and averaged data to a new Excel file
df.to_excel('normalized_and_averaged_data.xlsx', index=False)